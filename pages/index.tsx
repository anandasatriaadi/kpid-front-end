import type { UploadProps } from "antd";
import { Button, Form, Input, message, TimePicker, UploadFile } from "antd";
import { RcFile } from "antd/lib/upload";
import Dragger from "antd/lib/upload/Dragger";
import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useContext, useState } from "react";
import Navbar from "../components/Navbar";
import { BASE_URL } from "../config/Production";
import { AuthContext, AuthContextInterface } from "../context/AuthContext";

const Home: NextPage = () => {
  const router = useRouter();
  const { isLoggedIn, logout } = useContext(
    AuthContext
  ) as AuthContextInterface;

  const [uploadFile, setUploadFile] = useState<UploadFile>();
  const [uploading, setUploading] = useState<Boolean>(false);
  const [form] = Form.useForm();

  const onFinish = (values: any) => {
    console.log(values);
    let form = new FormData();
    for (const key in values) {
      form.append(key, values[key]);
    }

    form.append("video_file", uploadFile as RcFile);

    let requestOptions: RequestInit = {
      method: "POST",
      body: form,
      redirect: "follow",
      headers: {
        Authorization: `${localStorage.getItem("token")}`,
      },
    };

    console.log(form.forEach((value, key) => console.log(key, value)));

    fetch(BASE_URL + "/api/moderation-form", requestOptions)
      .then((response) => {
        if (response.status == 401) {
          logout();
        }
        return response.json();
      })
      .then((result) => {
        if (result.status == 201) {
          message.success(result.data);
          setTimeout(() => {
            router.push("/login");
          }, 200);
        } else {
          message.error(result.data);
        }
      })
      .catch((error) => console.log("error", error));
  };

  const onFinishFailed = (errorInfo: any) => {
    if (!isLoggedIn) {
      router.push("/login");
    }
    console.log("Failed:", errorInfo);
  };

  const fileDropProps: UploadProps = {
    name: "file",
    maxCount: 1,
    beforeUpload: (file) => {
      if (isLoggedIn) {
        setUploadFile(file);
        return false;
      } else {
        message.error("Anda harus login terlebih dahulu");
        return false;
      }
    },
    onRemove: () => {
      form.resetFields();
      setUploadFile(undefined);
    },
    fileList: uploadFile ? [uploadFile] : [],
  };

  return (
    <div>
      <Head>
        <title>Moderasi Video | KPID Jawa Timur</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="container mx-auto">
        <Navbar />
        <div className="p-4">
          <div className="flex justify-center">
            <div className="md:text-center md:w-1/2">
              <h1 className="text-lg font-semibold">
                Moderasi Video oleh KPID
              </h1>
              <p className="text-sm text-gray-500">
                KPID Jawa Timur menyediakan layanan moderasi video untuk
                memastikan bahwa video yang disiarkan sesuai dengan standar KPID
                Jawa Timur.
              </p>
            </div>
          </div>
          <div className="flex justify-center">
            <div className="w-full md:w-3/4 mt-8 p-4 rounded-md shadow-lg bg-sky-50">
              <Form
                form={form}
                name="moderation_form"
                onFinish={onFinish}
                onFinishFailed={onFinishFailed}
                autoComplete="off"
                layout="vertical"
              >
                <Dragger
                  {...fileDropProps}
                  className="flex justify-center items-center h-[15rem] rounded-md border-2 border-dashed border-gray-400 bg-transparent"
                >
                  <div className="flex flex-col">
                    <div className="flex justify-center">
                      <span className="p-4 rounded-full bg-sky-500"></span>
                    </div>
                    <div className="flex justify-center">
                      <Button
                        type="primary"
                        className="flex items-center mt-2"
                        icon={
                          <span className="rounded-full bg-sky-100 p-2 mr-2 h-auto" />
                        }
                      >
                        Pilih Video
                      </Button>
                    </div>
                    <span className="mt-2">
                      atau letakkan video anda disini
                    </span>
                  </div>
                </Dragger>

                <div
                  className={"font-semibold " + (uploadFile ? "" : "hidden")}
                >
                  <Form.Item
                    className="my-4"
                    initialValue={""}
                    label="Nama Program"
                    name="program"
                    rules={[
                      {
                        required: true,
                        message: "Please input your program name!",
                      },
                    ]}
                  >
                    <Input className="font-normal" />
                  </Form.Item>
                  <Form.Item
                    className="my-4"
                    initialValue={""}
                    label="Stasiun Televisi"
                    name="television"
                    rules={[
                      {
                        required: true,
                        message: "Please input your television station!",
                      },
                    ]}
                  >
                    <Input className="font-normal" />
                  </Form.Item>
                  <Form.Item
                    className="my-4"
                    initialValue={""}
                    label="Jam Mulai"
                    name="start_time"
                    rules={[
                      {
                        required: true,
                        message: "Please input your start time!",
                      },
                    ]}
                  >
                    <TimePicker
                      className="w-full font-normal"
                      format={"HH:mm"}
                    ></TimePicker>
                  </Form.Item>
                </div>

                <div className="flex justify-end mt-4">
                  <Button type="primary" htmlType="submit">
                    Upload
                  </Button>
                </div>
              </Form>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Home;
